#include <iostream>
using namespace std;

/* Task8
 * Создать двумерный целочисленный массив NxN элементов
 * Проинициализировать возрастающими значениями от левого верхнего угла
 * по спирали к центру
 * Вывести на экран
 */

const int SIZE = 5;

int main() {

    int matrix[SIZE][SIZE];

    int row = 0;
    int col = 0;
    // Определяем направление перемещения
    int dx = 1; // По умолчанию двигаемся вправо
    int dy = 0; // Без вертикального перемещения
    // Подсчитывает количество изменений направления, которые произошли
    int dir_changes = 0;
    // Отслеживает, сколько шагов можно сделать в текущем направлении, прежде чем потребуется изменение
    int steps = SIZE;

    for (size_t i = 0; i < SIZE * SIZE; i++) {
        matrix[col][row] = i;
        if (--steps == 0) {
            /*
             * Когда количество шагов достигает нуля, необходимо изменить направление.
             * Новое значение шагов рассчитывается на основе текущего количества изменений направления.
             * Направление изменяется путем замены dx и dy местами и отрицания одного из них.
             * Это фактически поворачивает вектор направления на 90 градусов по часовой стрелке.
             * Затем счетчик dir_changes увеличивается.
             */
            steps = SIZE * (dir_changes % 2) + SIZE * ((dir_changes + 1) % 2) - (dir_changes / 2 - 1) - 2;
            int temp = dx;
            dx = -dy;
            dy = temp;
            dir_changes++;
        }
        // Текущая позиция (строка и столбец) обновляется путем добавления dx и dy соответственно.
        row += dx;
        col += dy;
    }

    for (size_t i = 0; i < SIZE; i++) {
        for (size_t j = 0; j < SIZE; j++) {
            printf("%d\t", matrix[i][j]);
        }
        printf("\n");
    }

    return 0;
}